services:
  # PostgreSQL база данных
  postgres:
    image: postgres:15-alpine
    container_name: lct_postgres
    environment:
      POSTGRES_DB: lct_backend1
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - lct_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO S3-совместимое хранилище
  minio:
    image: minio/minio:latest
    container_name: lct_minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"  # API порт
      - "9001:9001"  # Console порт
    networks:
      - lct_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Создание bucket в MinIO
  minio-setup:
    image: minio/mc:latest
    container_name: lct_minio_setup
    depends_on:
      minio:
        condition: service_healthy
    networks:
      - lct_network
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb minio/lct-backend1-images --ignore-existing;
      /usr/bin/mc policy set public minio/lct-backend1-images;
      exit 0;
      "

  # RabbitMQ брокер сообщений
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: lct_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: app
      RABBITMQ_DEFAULT_PASS: app_password
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5678:5672"     # AMQP
      - "15672:15672"   # Management UI
    networks:
      - lct_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # LCT Backend1 приложение
  app:
    build: .
    container_name: lct_backend1
    environment:
      # База данных
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/lct_backend1
      
      # S3 конфигурация (MinIO)
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin123
      S3_BUCKET_NAME: lct-backend1-images
      S3_REGION: us-east-1
      S3_ENDPOINT_URL: http://minio:9000
      
      # URLs внешних сервисов (замените на реальные)
      BACKEND2_URL: http://backend2:8001
      BACKEND3_URL: http://backend3:8002

      # RabbitMQ
      RABBITMQ_URL: amqp://app:app_password@rabbitmq:5672/
      RABBITMQ_QUEUE_IMAGE_TASKS: image_tasks
      RABBITMQ_QUEUE_IMAGE_RESULTS: image_results
      
      # Настройки приложения
      DEBUG: "true"
      HOST: 0.0.0.0
      PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
      minio-setup:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
    networks:
      - lct_network
    command: >
      sh -c "
      echo 'Ожидание готовности базы данных...';
      sleep 10;
      echo 'Запуск приложения...';
      python run.py
      "

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local

networks:
  lct_network:
    driver: bridge